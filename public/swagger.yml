openapi: 3.0.0
info:
  title: Documentação da API JSON:API
  description: Documentação da API JSON:API para o seu projeto Rails
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /patients:
    get:
      tags:
        - Pacientes
      summary: Lista todos os pacientes
      responses:
        '200':
          description: Lista de pacientes recuperada com sucesso
          content:
            application/json:
              example:
                data:
                  - id: 1
                    type: patients
                    attributes:
                      name: João da Silva
                      phone: "(11) 99999-9999"
                      cpf: "123.456.789-00"
                      email: "joao@example.com"
                      birthdate: "1990-01-01"

    post:
      tags:
        - Pacientes
      summary: Cria um novo paciente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientRequest'
      responses:
        '201':
          description: Paciente criado com sucesso
          content:
            application/json:
              example:
                data:
                  id: 2
                  type: patients
                  attributes:
                    name: Maria Oliveira
                    phone: "(11) 88888-8888"
                    cpf: "987.654.321-00"
                    email: "maria@example.com"
                    birthdate: "1985-05-10"
        '400':
          description: Requisição inválida

  /patients/{id}:
    get:
      tags:
        - Pacientes
      summary: Retorna um paciente específico
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do paciente
      responses:
        '200':
          description: Paciente encontrado
        '404':
          description: Paciente não encontrado
    put:
      tags:
        - Pacientes
      summary: Atualiza um paciente existente
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do paciente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientRequest'
      responses:
        '200':
          description: Paciente atualizado com sucesso
        '404':
          description: Paciente não encontrado
    delete:
      tags:
        - Pacientes
      summary: Remove um paciente existente
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do paciente
      responses:
        '204':
          description: Paciente removido com sucesso
        '404':
          description: Paciente não encontrado
  /appointments:
    get:
      tags:
        - Agendamentos
      summary: Lista todos os agendamentos
      responses:
        '200':
          description: Lista de agendamentos recuperada com sucesso
          content:
            application/json:
              example:
                data:
                  - id: 1
                    type: appointments
                    attributes:
                      started_at: "2024-04-20T10:00:00Z"
                      duration: 30
                      status: "scheduled"
                      doctor_id: "f8a41d4c-0d6b-4c68-a3a8-7c7f799d6d7e"
                      patient_id: "2ac41b9f-ec95-4481-bc6e-d9b19e08e631"
                  - id: 2
                    type: appointments
                    attributes:
                      started_at: "2024-04-21T14:00:00Z"
                      duration: 60
                      status: "completed"
                      doctor_id: "f8a41d4c-0d6b-4c68-a3a8-7c7f799d6d7e"
                      patient_id: "ef245bcc-1a79-4a15-912b-3cb751646187"
    post:
      tags:
        - Agendamentos
      summary: Cria um novo agendamento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
      responses:
        '201':
          description: Agendamento criado com sucesso
          content:
            application/json:
              example:
                data:
                  id: 3
                  type: appointments
                  attributes:
                    started_at: "2024-04-22T09:30:00Z"
                    duration: 45
                    status: "scheduled"
                    doctor_id: "f8a41d4c-0d6b-4c68-a3a8-7c7f799d6d7e"
                    patient_id: "9b1d4e1f-d4f3-4d3b-87ef-69d36c135b26"

  /appointments/{id}:
    get:
      tags:
        - Agendamentos
      summary: Retorna um agendamento específico
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do agendamento
      responses:
        '200':
          description: Agendamento encontrado
          content:
            application/json:
              example:
                data:
                  id: 1
                  type: appointments
                  attributes:
                    started_at: "2024-04-20T10:00:00Z"
                    duration: 30
                    status: "scheduled"
                    doctor_id: "f8a41d4c-0d6b-4c68-a3a8-7c7f799d6d7e"
                    patient_id: "2ac41b9f-ec95-4481-bc6e-d9b19e08e631"
    put:
      tags:
        - Agendamentos
      summary: Atualiza um agendamento existente
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do agendamento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
      responses:
        '200':
          description: Agendamento atualizado com sucesso
          content:
            application/json:
              example:
                data:
                  id: 1
                  type: appointments
                  attributes:
                    started_at: "2024-04-20T11:00:00Z"
                    duration: 45
                    status: "completed"
                    doctor_id: "f8a41d4c-0d6b-4c68-a3a8-7c7f799d6d7e"
                    patient_id: "2ac41b9f-ec95-4481-bc6e-d9b19e08e631"
    delete:
      tags:
        - Agendamentos
      summary: Remove um agendamento existente
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do agendamento
      responses:
        '204':
          description: Agendamento removido com sucesso
        '404':
          description: Agendamento não encontrado

components:
  schemas:
    AppointmentRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              enum: [appointments]
            attributes:
              type: object
              properties:
                started_at:
                  type: string
                  format: date-time
                duration:
                  type: integer
                status:
                  type: string
                doctor_id:
                  type: string
                patient_id:
                  type: string
    PatientRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              enum: [patients]
            attributes:
              type: object
              properties:
                name:
                  type: string
                phone:
                  type: string
                cpf:
                  type: string
                email:
                  type: string
                birthdate:
                  type: string
                  format: date

# Repita a estrutura acima para as outras tabelas (doctors, addresses, appointments, proceedings)
